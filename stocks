<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Stocks</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h1>My Stocks</h1>
    <table id="stocksTable">
        <thead>
            <tr>
                <th>Stock</th>
                <th>No of Shares</th>
                <th>Bought Price ($USD)</th>
                <th>Total Bought Value ($USD)</th>
                <th>Current Share Price ($USD)</th>
                <th>Current Share Value ($USD)</th>
                <th>Percentage Gain/Loss (%)</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>NVDA</td>
                <td id="shares1">20</td>
                <td id="boughtPrice1">120.45</td>
                <td id="totalBoughtValue1"></td>
                <td id="currentPrice1">Loading...</td>
                <td id="currentValue1"></td>
                <td id="percentageChange1"></td>
            </tr>
            <tr>
                <td>NBIS</td>
                <td id="shares2">70</td>
                <td id="boughtPrice2">30.32</td>
                <td id="totalBoughtValue2"></td>
                <td id="currentPrice2">Loading...</td>
                <td id="currentValue2"></td>
                <td id="percentageChange2"></td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <th colspan="3">Total</th>
                <th id="totalBoughtSum"></th>
                <th></th>
                <th id="currentValueSum"></th>
                <th id="totalGainLoss"></th>
            </tr>
            <tr>
                <th colspan="6">Current Gains or Loss ($USD)</th>
                <th id="currentGainsLoss"></th>
            </tr>
        </tfoot>
    </table>

    <script>
        const stocks = [
            { symbol: 'NVDA', shares: 20, boughtPrice: 120.45, rowId: 1 },
            { symbol: 'NBIS', shares: 70, boughtPrice: 30.32, rowId: 2 }
        ];

        const apiKey = '81GLWK8WQJ7DUSSH';  // Your Alpha Vantage API Key

        async function fetchStockPrice(symbol) {
            try {
                const response = await fetch(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${apiKey}`);
                const data = await response.json();
                
                if (data["Global Quote"] && data["Global Quote"]["05. price"]) {
                    return parseFloat(data["Global Quote"]["05. price"]);
                } else {
                    console.error(`Error fetching data for ${symbol}: `, data);
                    return null;
                }
            } catch (error) {
                console.error(`Network error fetching ${symbol}: `, error);
                return null;
            }
        }

        async function updateStockData() {
            let totalBoughtSum = 0;
            let currentValueSum = 0;

            for (let stock of stocks) {
                const totalBoughtValue = stock.shares * stock.boughtPrice;
                totalBoughtSum += totalBoughtValue;

                // Fetch the current share price
                const currentPrice = await fetchStockPrice(stock.symbol);
                if (!currentPrice) continue; // Skip update if price fetch failed

                const currentValue = stock.shares * currentPrice;
                currentValueSum += currentValue;

                const percentageChange = ((currentValue - totalBoughtValue) / totalBoughtValue) * 100;

                // Update the table cells
                document.getElementById(`totalBoughtValue${stock.rowId}`).innerText = totalBoughtValue.toFixed(2);
                document.getElementById(`currentPrice${stock.rowId}`).innerText = currentPrice.toFixed(2);
                document.getElementById(`currentValue${stock.rowId}`).innerText = currentValue.toFixed(2);
                document.getElementById(`percentageChange${stock.rowId}`).innerText = percentageChange.toFixed(2);
            }

            const totalGainLoss = ((currentValueSum - totalBoughtSum) / totalBoughtSum) * 100;
            const currentGainsLoss = currentValueSum - totalBoughtSum;

            // Update the footer cells
            document.getElementById('totalBoughtSum').innerText = totalBoughtSum.toFixed(2);
            document.getElementById('currentValueSum').innerText = currentValueSum.toFixed(2);
            document.getElementById('totalGainLoss').innerText = totalGainLoss.toFixed(2);
            document.getElementById('currentGainsLoss').innerText = currentGainsLoss.toFixed(2);
        }

        // Update stock data on page load
        updateStockData();

        // Refresh data every 60 seconds
        setInterval(updateStockData, 60000);
    </script>
</body>
</html>
